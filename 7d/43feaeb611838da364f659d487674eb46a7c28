X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS14383 205.234.109.0/24
X-Spam-Status: No, score=-0.7 required=5.0 tests=MSGID_FROM_MTA_HEADER,
 RP_MATCHES_RCVD shortcircuit=no autolearn=unavailable version=3.3.2
Path: news.gmane.org!not-for-mail
From: =?iso-8859-1?q?I=F1aki_Baz_Castillo?= <ibc@aliax.net>
Newsgroups: gmane.comp.lang.ruby.unicorn.general
Subject: Re: "unicorn -D" always returns 0 "success" (even when failed to
 load)
Date: Thu, 24 Dec 2009 10:30:01 +0100
Message-ID: <200912241030.02160.ibc@aliax.net>
References: <200912230320.59469.ibc@aliax.net>
 <200912231122.28331.ibc@aliax.net> <20091223203544.GB13735@dcvr.yhbt.net>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Trace: ger.gmane.org 1261647348 10120 80.91.229.12 (24 Dec 2009 09:35:48
 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Thu, 24 Dec 2009 09:35:48 +0000 (UTC)
To: mongrel-unicorn@rubyforge.org
Original-X-From: mongrel-unicorn-bounces@rubyforge.org Thu Dec 24 10:35:41
 2009
Return-path: <mongrel-unicorn-bounces@rubyforge.org>
Envelope-to: gclrug-mongrel-unicorn@m.gmane.org
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
User-Agent: KMail/1.12.2 (Linux/2.6.28-16-generic; KDE/4.3.2; x86_64; ; )
In-Reply-To: <20091223203544.GB13735@dcvr.yhbt.net>
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Original-Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org
Xref: news.gmane.org gmane.comp.lang.ruby.unicorn.general:239
Archived-At:
 <http://permalink.gmane.org/gmane.comp.lang.ruby.unicorn.general/239>
Received: from rubyforge.org ([205.234.109.19]) by lo.gmane.org with esmtp
 (Exim 4.50) id 1NNk6A-0004hY-Ka for gclrug-mongrel-unicorn@m.gmane.org; Thu,
 24 Dec 2009 10:35:10 +0100
Received: from rubyforge.org (rubyforge.org [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 8D0A118582FF; Thu, 24 Dec 2009 04:35:10 -0500 (EST)
Received: from mail-fx0-f226.google.com (mail-fx0-f226.google.com
 [209.85.220.226]) by rubyforge.org (Postfix) with ESMTP id 6937F19782D9 for
 <mongrel-unicorn@rubyforge.org>; Thu, 24 Dec 2009 04:30:07 -0500 (EST)
Received: by fxm26 with SMTP id 26so8044140fxm.19 for
 <mongrel-unicorn@rubyforge.org>; Thu, 24 Dec 2009 01:30:06 -0800 (PST)
Received: by 10.223.6.142 with SMTP id 14mr15336040faz.43.1261647006329; Thu,
 24 Dec 2009 01:30:06 -0800 (PST)
Received: from ibc-laptop.localnet
 (16.85-84-188.dynamic.clientes.euskaltel.es [85.84.188.16]) by mx.google.com
 with ESMTPS id 16sm2851509fxm.8.2009.12.24.01.30.04 (version=TLSv1/SSLv3
 cipher=RC4-MD5); Thu, 24 Dec 2009 01:30:05 -0800 (PST)

El Mi=E9rcoles, 23 de Diciembre de 2009, Eric Wong escribi=F3:
> > > Adding this code doesn't solve problems.  Either way the site can
> > > become inaccessible/unusable and problems are noticeable very quickly.
> >
> > Sure, but how to explain that to Hearteat? :)
> =

> I had a lot of trouble coming to terms with this one myself :)
> =

> Eventually I reasoned that the heartbeat mechanism is to protect against
> unforeseen failures way down the line (and sometimes outside of the
> application's control).
> =

> It's (hopefully) common and expected to check applications shortly
> following deployments, so heartbeat isn't for that.

Yes, you are right.

 =

> However applications have a tendency to break in unforseen ways, and
> only in production, and at the worst times.  These failures happen well
> after the app is deployed :)

Yes, every application breaks just in the moment that it shouldn't :)

However I'm building my app now and when start it it usually has errors, an=
d =

that's good as it means I'm working :)
But sincerelly I would like to see the error just once rather than many tim=
es =

due to workers respawn :)

Also, is there any "interval" parameter so a worker is not re-spawned until =

such timeout (after die).




> > This is: usually to verify the process status the PID file/value is
> > inspected. If there is a process running under such PID then we "assume"
> > that process is Unicorn. In case that PID is stolen by any other process
> > (since PID file wasn't deleted) nobody realizes of it.
> =

> Under modern Linux systems, you have several options...
> =

>   tr '\0' ' ' < /proc/$PID/cmdline # show the command-line
> =

>   pmap $PID | grep unicorn_http.so # not many other things load this
> =

>   lsof -p $PID  # can check listening ports/log files

Yes! this is much better! :)

 =

> Unfortunately I don't use other OSes enough to remember the
> equivalents...

The server will run just on Linux (Unix) server :)


> > A way to determine it could be asking to Unicorn master process (using
> > i.e. DRB) its PID and match it against the PID value stored in the
> > pidfile. Of course it would require some kind of communication with
> > unicorn master process to get its PID, is it possible now in some way?
> =

> I don't see how being under a specific PID actually matters.  Why not
> just write a script that sends an HTTP request to check?
> =

> Workers will die soon after the first request, or (timeout/2) seconds if
> a master dies anyways.

Well, in fact I want to code some console utility to get information from t=
he =

application (loaded configuration, check the database(s) connection and so).
For that I was thinking in a DRb server running in the master because it mu=
st =

bind in some TCP port.

The problem is that I should stop the DRb server before master reexec to av=
oid =

EADDINUSE. Well, I could code some rescue block...




> > I didn't know about such options in .ru file. Are those options
> > supposed to be read by the backend?
> =

> I don't believe it's well-documented, I only found out from reading the
> rackup code and I'm not really a fan of magic comments, but they're only
> for the basic command-line arguments rackup handles:
> =

>   $ rackup -h
...
>  -D, --daemonize          run daemonized in the background

Why "daemonize" is not present in unicornf configuration file?


Really thanks a lot for all your help.



-- =

I=F1aki Baz Castillo <ibc@aliax.net>
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying

