From ew@dcvr.yhbt.net  Wed Apr 23 08: 26:12 2014
Return-Path: <ew@dcvr.yhbt.net>
X-Original-To: pi+piham
Delivered-To: pi+piham@dcvr.yhbt.net
Received: by dcvr.yhbt.net (Postfix, from userid 1000) id 51C2C1F728; Wed, 23
 Apr 2014 08:26:12 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS33070 50.56.128.0/17
X-Spam-Status: No, score=-0.7 required=5.0 tests=AWL,BAYES_00,
 RCVD_IN_DNSWL_BLOCKED,RDNS_NONE,T_DKIM_INVALID shortcircuit=no autolearn=no
 version=3.3.2
X-Original-To: normalperson@yhbt.net
Delivered-To: ew@dcvr.yhbt.net
Received: from rubyforge.org (unknown [50.56.192.79]) by dcvr.yhbt.net
 (Postfix) with ESMTP id C98A21F6D3 for <normalperson@yhbt.net>; Wed, 23 Apr
 2014 01:57:20 +0000 (UTC)
Received: from localhost.localdomain (localhost [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 396E22E206; Wed, 23 Apr 2014 01:57:20 +0000 (UTC)
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
X-Greylist: delayed 1116 seconds by postgrey-1.31 at rubyforge; Wed, 23 Apr
 2014 01:57:15 UTC
Received: from mail-qa0-f53.google.com (mail-qa0-f53.google.com
 [209.85.216.53]) by rubyforge.org (Postfix) with ESMTP id 876152E205 for
 <mongrel-unicorn@rubyforge.org>; Wed, 23 Apr 2014 01:57:15 +0000 (UTC)
Received: by mail-qa0-f53.google.com with SMTP id w8so281077qac.40 for
 <mongrel-unicorn@rubyforge.org>; Tue, 22 Apr 2014 18:57:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=zendesk.com;
 s=zencorpemail;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :content-type; bh=pPV7gqKjFO7dP6S2cdiqZ5YDuEp5l92HQ7ko55f4n9Q=;
 b=Ia71Un6zpWg2lY+WCAdInuKVmnLfHkqVe8YJo81HMh9jYvgjB5iKVE7Op8DirYgSgY
 t8vgkgQkpt8Q1DauTy7DQNyWyE61KULhsdIZiUb+ktPOTCxfcqcIp9k10brVYuMMN+Y6
 ++l+xzkk9/hnqa3QsrOgJuMJZwZvQt8+ZmPkE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20130820; h=x-gm-message-state:mime-version:in-reply-to:references:date
 :message-id:subject:from:to:content-type;
 bh=pPV7gqKjFO7dP6S2cdiqZ5YDuEp5l92HQ7ko55f4n9Q=;
 b=bDpnZkMfvoGYS6Xc8ZsQsHV7vgqqtIIwaelHRWeQTRbtYhKKGPG+C3t8CwkFJzam10
 CBi+AAc5TqTT6otcNM7G1EbMZ9bQT60RPKCxjgCl/LwJVxRiQmlBfzh8dhTRn6XgLIGy
 MlKns63gxrUgoxYBpdE2k5rv9JQD0kRL+ri2Zij29CJtoQSmiwzY6nYLGN7MPN2UXgLw
 Y3sZQXUZVy5j2EaiyEyk4I9POYOryUKxe77LQRYdivHyJQ5Z+sx1JLrfUjZusC91VQml
 BdtYKFC0Lx6oV/PAgiPEeVhI8B/gma7kSUHheNj2jdypRFQsS5AfBR46fHyDEsPzklkx Derg==
X-Gm-Message-State:
 ALoCoQmsn8m4boCs0iZcEN7P4q6ojxalqh9Xx7vbDra1fmkzY8CXP5r60prIUulNuPpj0KYjLxXb
MIME-Version: 1.0
X-Received: by 10.224.167.12 with SMTP id o12mr53193988qay.77.1398216626688;
 Tue, 22 Apr 2014 18:30:26 -0700 (PDT)
Received: by 10.140.102.248 with HTTP; Tue, 22 Apr 2014 18:30:26 -0700 (PDT)
In-Reply-To:
 <CAAtdryNzTzDk+V2bEfePvL6wtxQ3FSW-Nm=EA2eih9RRmZ2cYg@mail.gmail.com>
References:
 <CAAtdryNzTzDk+V2bEfePvL6wtxQ3FSW-Nm=EA2eih9RRmZ2cYg@mail.gmail.com>
Date: Tue, 22 Apr 2014 18:30:26 -0700
Message-ID:
 <CABHxtY727DZXm3S33E+ygj-0SPe7dhpLRXhh3bZQvs20p=Bh9g@mail.gmail.com>
Subject: Re: Is there a cleaner way of hooking into the event loop?
From: Michael Fischer <mfischer@zendesk.com>
To: unicorn list <mongrel-unicorn@rubyforge.org>
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
Reply-To: unicorn list <mongrel-unicorn@rubyforge.org>
List-Id: unicorn list <mongrel-unicorn.rubyforge.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <mailto:mongrel-unicorn@rubyforge.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org

On Tue, Apr 22, 2014 at 6:21 PM, Sam Saffron <sam.saffron@gmail.com> wrote:
> I am spawning sidekiqs from the master process so I share memory
> better, added this patch
>
> https://github.com/discourse/discourse/commit/4aaedb82d09d53159a99c3c94c0232c3cf5b0725
>
> Thing is I need to be in the master thread for both checks and
> spawning cause of this https://bugs.ruby-lang.org/issues/9751
>
> Is there a cleaner way to hook in?

>From an operational perspective this seems like a significant
premature optimization.  I'd think twice before doing it.  IME you
really don't want asynchronous job handling in the same process space
as a synchronous preforking webserver.  Best to keep your concerns
separated.  And RAM is cheap.

--Michael
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying
