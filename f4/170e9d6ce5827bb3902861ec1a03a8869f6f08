X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS14383 205.234.109.0/24
X-Spam-Status: No, score=-0.5 required=5.0 tests=AWL,MSGID_FROM_MTA_HEADER,
 RP_MATCHES_RCVD shortcircuit=no autolearn=unavailable version=3.3.2
Path: news.gmane.org!not-for-mail
From: Eric Wong <normalperson@yhbt.net>
Newsgroups: gmane.comp.lang.ruby.unicorn.general
Subject: Re: Raised exceptions are not logged when USR2
Date: Sat, 2 Jan 2010 16:04:01 -0800
Message-ID: <20100103000401.GA13826@dcvr.yhbt.net>
References: <201001021742.29874.ibc@aliax.net>
 <201001022227.31999.ibc@aliax.net> <201001022233.04664.ibc@aliax.net>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Trace: ger.gmane.org 1262477335 15046 80.91.229.12 (3 Jan 2010 00:08:55
 GMT)
X-Complaints-To: usenet@ger.gmane.org
NNTP-Posting-Date: Sun, 3 Jan 2010 00:08:55 +0000 (UTC)
To: unicorn list <mongrel-unicorn@rubyforge.org>
Original-X-From: mongrel-unicorn-bounces@rubyforge.org Sun Jan 03 01:08:48
 2010
Return-path: <mongrel-unicorn-bounces@rubyforge.org>
Envelope-to: gclrug-mongrel-unicorn@m.gmane.org
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
Content-Disposition: inline
In-Reply-To: <201001022233.04664.ibc@aliax.net>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Original-Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org
Xref: news.gmane.org gmane.comp.lang.ruby.unicorn.general:290
Archived-At:
 <http://permalink.gmane.org/gmane.comp.lang.ruby.unicorn.general/290>
Received: from rubyforge.org ([205.234.109.19]) by lo.gmane.org with esmtp
 (Exim 4.50) id 1NRE1Y-0004xY-0B for gclrug-mongrel-unicorn@m.gmane.org; Sun,
 03 Jan 2010 01:08:48 +0100
Received: from rubyforge.org (rubyforge.org [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 4B0DA15B8029; Sat,  2 Jan 2010 19:08:48 -0500 (EST)
Received: from dcvr.yhbt.net (dcvr.yhbt.net [64.71.152.64]) by rubyforge.org
 (Postfix) with ESMTP id 478A215B802E for <mongrel-unicorn@rubyforge.org>;
 Sat,  2 Jan 2010 19:04:03 -0500 (EST)
Received: from localhost (unknown [127.0.2.5]) by dcvr.yhbt.net (Postfix)
 with ESMTP id EF3A61F525; Sun,  3 Jan 2010 00:04:01 +0000 (UTC)

I=F1aki Baz Castillo <ibc@aliax.net> wrote:
> El S=E1bado, 2 de Enero de 2010, I=F1aki Baz Castillo escribi=F3:
> > A simpler approach would be removing this line at the end of launcher.r=
b:
> > =

> >   Unicorn::Configurator::DEFAULTS[:stderr_path] =3D "/dev/null"
> > =

> > With this, errors would be displayed in stderr. Of course for workers
> >  stderr should be reopened to point to /dev/null, but IMHO not for mast=
er
> >  process.
> > =

> > Perhaps errors preventing the master process to start should be display=
ed
> >  to stderr instead of to the logger (as it could be not set yet).
> =

> And the other already available workaround is setting the "stderr_path".
> Unfortunatelly $stderr.reopen requires a file as parameter so is not poss=
ible =

> to use Syslog or any other logger, is it?

Hi I=F1aki,

Unfortunately, the stock Syslog module isn't compatible with the Ruby
Logger implementation.  Try grabbing the "SyslogLogger" gem and using
that instead.  I haven't had any experience with SyslogLogger, but a
cursory look says it's OK.

I would always keep stderr_path set somewhere in your config file since
by default "rack.errors" points to it, and it's the default place for
Kernel#warn to output to.

If you really want to, you may be able to subclass SyslogLogger and give
it IO-like methods (write/puts/flush) are require for Rack::Lint
compatibility and then set $stderr:

  # Totally untested, stick this in your Unicorn config file and let
  # us know if it works or blows up badly:

  require 'syslog_logger'

  class MySyslogLogger < SyslogLogger
    alias puts error
    alias write error
    def flush; self; end
  end

  $stderr =3D MySyslogLogger.new('foo')

> BTW, how to reset the $stderr so it points again to the default one (the =

> terminal)?

You would've had to dup stderr in the config file and keep it referenced
before it got redirected.  But a daemonized process shouldn't be holding
onto terminals...

-- =

Eric Wong
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying

