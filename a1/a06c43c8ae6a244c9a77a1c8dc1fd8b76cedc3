X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS14383 205.234.109.0/24
X-Spam-Status: No, score=-0.6 required=5.0 tests=FREEMAIL_FROM,
 MSGID_FROM_MTA_HEADER,RP_MATCHES_RCVD,T_DKIM_INVALID shortcircuit=no
 autolearn=unavailable version=3.3.2
Path: news.gmane.org!not-for-mail
From: Matt Smith <matthewcalebsmith@gmail.com>
Newsgroups: gmane.comp.lang.ruby.unicorn.general
Subject: Unicorn vs Apache
Date: Mon, 11 Jul 2011 09:07:59 -0700
Message-ID: <1310400479.3665.44.camel@antium>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1310401579 4221 80.91.229.12 (11 Jul 2011 16:26:19
 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Mon, 11 Jul 2011 16:26:19 +0000 (UTC)
To: mongrel-unicorn@rubyforge.org
Original-X-From: mongrel-unicorn-bounces@rubyforge.org Mon Jul 11 18:26:15
 2011
Return-path: <mongrel-unicorn-bounces@rubyforge.org>
Envelope-to: gclrug-mongrel-unicorn@m.gmane.org
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=gamma;
 h=subject:from:to:content-type:date:message-id:mime-version:x-mailer
 :content-transfer-encoding; bh=NE2+qkyF0xNBUaWCWzw+67BS56GS1dpGRgM5kTclzno=;
 b=EvjH7g+0emRG8XukF71vdyxrJe9L/oCFzih4oKZbNwVWSIyI9h/fPX98UXDaney4eJ
 dSoy/RukxjHZpvpgQ3pmivR/OP/mLEQoIQY6TxQvnnyj2ZAIKg1GsxZ5yDsee2gv8xTa
 Zecu2tVfwM1Lai72COCAwwVYts/CzF6r+z9Rs=
X-Mailer: Evolution 2.32.2 
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Original-Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org
Xref: news.gmane.org gmane.comp.lang.ruby.unicorn.general:1049
Archived-At:
 <http://permalink.gmane.org/gmane.comp.lang.ruby.unicorn.general/1049>
Received: from rubyforge.org ([205.234.109.19]) by lo.gmane.org with esmtp
 (Exim 4.69) (envelope-from <mongrel-unicorn-bounces@rubyforge.org>) id
 1QgJJG-0002t1-6R for gclrug-mongrel-unicorn@m.gmane.org; Mon, 11 Jul 2011
 18:26:14 +0200
Received: from rubyforge.org (rubyforge.org [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 2AB1F1678338; Mon, 11 Jul 2011 12:26:13 -0400 (EDT)
Received: from mail-pz0-f50.google.com (mail-pz0-f50.google.com
 [209.85.210.50]) by rubyforge.org (Postfix) with ESMTP id 794A31858112 for
 <mongrel-unicorn@rubyforge.org>; Mon, 11 Jul 2011 12:08:04 -0400 (EDT)
Received: by pzk2 with SMTP id 2so5424839pzk.23 for
 <mongrel-unicorn@rubyforge.org>; Mon, 11 Jul 2011 09:08:03 -0700 (PDT)
Received: by 10.68.33.225 with SMTP id u1mr7588148pbi.199.1310400483592; Mon,
 11 Jul 2011 09:08:03 -0700 (PDT)
Received: from [10.0.1.2] (c-67-168-21-42.hsd1.wa.comcast.net [67.168.21.42])
 by mx.google.com with ESMTPS id b4sm5456512pba.59.2011.07.11.09.08.01
 (version=SSLv3 cipher=OTHER); Mon, 11 Jul 2011 09:08:01 -0700 (PDT)

Hello all,

I have always deploys rails apps with unicorn and nginx as a reverse
proxy in the past. However, I am working with a new firm and they would
like to use Apache with mod_pagespeed in front of unicorn.

We will be deploying a rails 3.1 app with streaming. To me,
mod_pagespeed does not seem like a magic bullet, as it appears to be a
collection of best practices which have to be rewritten as a page is
being served. Why not code with the best practices in mind as to not
have to scan and yet again reprocess the content?

Searching on the web, I find few entries about mod_page speed and rails,
and relatively few entries about apache with unicorn.

To me it seems that using best practices, with appropriate use of
caching, and nginx would be a better solution than apache with
mod_pagespeed.

Questions:

1) Does nginx provide any necessary services to unicorn, that apache
cannot provide?

2) If apache can provide all necessary services, does it do them as well
as nginx.

3) We would like the fastest user experience possible. Does apache with
mod_pagespeed hold any weight here over nginx?

4) Part of a fast user experience is how fast you get the page, correct?
Seems like nginx has the upper hand here, due to nginx's nio vs apache's
threading.

5) Would it make since to put nginx in front of apache w/mod_pagespeed
(or visa versa), to use the applicable mod_pagespeed filters? Or is this
a bad idea to begin with?

6) Is there anything else I am missing? Are there any specific resources
I need to look at?

7) Should we go with nginx or apache? (Opinions ok.)

Much thanks,

Matt Smith



_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying

