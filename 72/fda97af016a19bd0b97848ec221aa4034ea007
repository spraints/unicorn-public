Return-Path: <mongrel-unicorn-bounces@rubyforge.org>
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS33070 50.56.128.0/17
X-Spam-Status: No, score=0.0 required=5.0 tests=T_DKIM_INVALID
 shortcircuit=no autolearn=unavailable version=3.3.2
X-Original-To: archivist@yhbt.net
Delivered-To: archivist@dcvr.yhbt.net
Received: from rubyforge.org (50-56-192-79.static.cloud-ips.com
 [50.56.192.79]) by dcvr.yhbt.net (Postfix) with ESMTP id 3A6163F35F for
 <archivist@yhbt.net>; Tue,  9 Oct 2012 23:07:28 +0000 (UTC)
Received: from localhost.localdomain (localhost [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id A66622E079; Tue,  9 Oct 2012 23:07:27 +0000 (UTC)
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
Received: from mail-wg0-f54.google.com (mail-wg0-f54.google.com
 [74.125.82.54]) by rubyforge.org (Postfix) with ESMTP id 062022E079 for
 <mongrel-unicorn@rubyforge.org>; Tue,  9 Oct 2012 23:06:59 +0000 (UTC)
Received: by mail-wg0-f54.google.com with SMTP id dt10so4193049wgb.23 for
 <mongrel-unicorn@rubyforge.org>; Tue, 09 Oct 2012 16:06:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com;
 s=20120113; h=sender:content-type:mime-version:subject:from:in-reply-to:date
 :content-transfer-encoding:message-id:references:to:x-mailer;
 bh=GpyaagetuSsrJn16L2e462fzUGCxKh1YcZjRM1W2wPg=;
 b=WlQsY7K835mekgPUAO/liNU+ayOU1+FBzQ1yoQNuqUd7wYstvHAHs+6R2Ie7DiZUAP
 N34kMWFYnboweI4ms7RFkbovYn6SbAy5VA2b0TVX6UsS7z2HwJOIgWQnFfCWmZXd7TyA
 dPuVSCB6sk+L/rnNAPBeFTyDQDF45NEn6ttuGCyL5hXRcL13H1FVasXc1gXiG4ol6Ia7
 bbOsz6jCSxSpxyr5GKggS1IajutwFjsVj8PSOj6yT0XNRqJ2rvQBhrA5NXbgVgDl4vGw
 o6tPu0KMNlqjNQwJJUyUhg6afcEGM6rC8Eq7kIHn3wLvvRHQ+1wQeG6Tey5E9L5oyebm u0gw==
Received: by 10.216.245.135 with SMTP id o7mr12252132wer.40.1349824019245;
 Tue, 09 Oct 2012 16:06:59 -0700 (PDT)
Received: from [192.168.1.134] (26.47.191.90.sta.estpak.ee. [90.191.47.26])
 by mx.google.com with ESMTPS id dm3sm30638373wib.3.2012.10.09.16.06.57
 (version=TLSv1/SSLv3 cipher=OTHER); Tue, 09 Oct 2012 16:06:58 -0700 (PDT)
Mime-Version: 1.0 (Mac OS X Mail 6.1 \(1498\))
Subject: Re: Is a client uploading a file a slow client from unicorn's point
 of view?
From: Laas Toom <laas@toom.ee>
In-Reply-To: <20121009200306.GA17437@dcvr.yhbt.net>
Date: Wed, 10 Oct 2012 02:06:55 +0300
Message-Id: <3EDF9F45-B5FB-4C3B-B0E5-37C28ECFE1D1@toom.ee>
References:
 <CAHStS5iqBqJxoPZGEUaSHL2qSVf_tfZfbdedc_bRcjcTbcKwAQ@mail.gmail.com>
 <20121009015800.GA1772@dcvr.yhbt.net>
 <CFC93863-1061-4710-A195-58CBCCBED7B8@toom.ee>
 <20121009200306.GA17437@dcvr.yhbt.net>
To: unicorn list <mongrel-unicorn@rubyforge.org>
X-Mailer: Apple Mail (2.1498)
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org


On 09.10.2012, at 23:03, Eric Wong <normalperson@yhbt.net> wrote:

>> 2) make the upload progress available, so e.g. AJAX-powered upload forms can show progressbar, which is really neat. No need for Flash-based uploaders.
> 
> It does?  I'm not seeing it in the documentation, but I know there's
> a separate upload progress module, though:
> http://wiki.nginx.org/HttpUploadProgressModule

I must have mixed them up then. :-)

>> I have a Rails app that accepts media uploads. All the processing happens in background, front-end handles only the actual upload and stores it to disk.
>> But with uploads as large as 1.4 GB, I've seen Rails response times > 200 secs. This starts to give timeouts in weird places.
> 
> Yikes.  I assume you're constrained by disk I/O there?

Might be. Additionally, the disk is SAN, so network activity there too.

> For some of the large file situations under Linux, I find it beneficial
> to lower the dirty_*ratio/*bytes drastically to avoid large, sudden
> bursts of disk activity and instead favor smaller writes.  I get lower
> throughput, but more consistent performance.

I shall look into it when I get to fixing this issue.


>> Afterwards it will only handle out the file location and Rails can
>> complete it's work a lot faster, freeing up workers.
>> 
>> Unicorn won't even see the file and Rails has the responsibility to
>> delete the file if it's invalid.
> 
> I think the only problem with this approach is it won't work well on
> setups where nginx is on separate machines from unicorn.  Shared
> storage would be required, but that ends up adding to network I/O,
> too...

But won't (almost) the same network I/O be evident anyway, because of nginx transferring the data to Unicorn over network (as they are on different machines)?

Thanks for clarifying,
Laas

_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying
