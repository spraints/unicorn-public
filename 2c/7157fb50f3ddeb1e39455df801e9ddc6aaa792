X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS14383 205.234.109.0/24
X-Spam-Status: No, score=-0.7 required=5.0 tests=MSGID_FROM_MTA_HEADER,
 RP_MATCHES_RCVD shortcircuit=no autolearn=unavailable version=3.3.2
Path: news.gmane.org!not-for-mail
From: Grant Heffernan <heffergm@me.com>
Newsgroups: gmane.comp.lang.ruby.unicorn.general
Subject: error when HUP'ing unicorn
Date: Fri, 12 Nov 2010 15:51:04 -0500
Message-ID: <1113C85A-16C6-4197-B0C3-29F89B506E17@me.com>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Trace: dough.gmane.org 1289601211 28993 80.91.229.12 (12 Nov 2010 22:33:31
 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Fri, 12 Nov 2010 22:33:31 +0000 (UTC)
To: mongrel-unicorn@rubyforge.org
Original-X-From: mongrel-unicorn-bounces@rubyforge.org Fri Nov 12 23:33:27
 2010
Return-path: <mongrel-unicorn-bounces@rubyforge.org>
Envelope-to: gclrug-mongrel-unicorn@m.gmane.org
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
X-Greylist: delayed 3621 seconds by postgrey-1.31 at rubyforge.org; Fri, 12
 Nov 2010 16:52:16 EST
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 suspectscore=1 phishscore=0 bulkscore=0 adultscore=0
 classifier=spam adjust=0 reason=mlx engine=6.0.2-1004200000
 definitions=main-1011120176
X-Proofpoint-Virus-Version: vendor=fsecure
 engine=2.50.10432:5.2.15,1.0.148,0.0.0000
 definitions=2010-11-12_10:2010-11-12, 2010-11-12, 1970-01-01 signatures=0
X-Mailer: Apple Mail (2.1082)
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Original-Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org
Xref: news.gmane.org gmane.comp.lang.ruby.unicorn.general:749
Archived-At:
 <http://permalink.gmane.org/gmane.comp.lang.ruby.unicorn.general/749>
Received: from rubyforge.org ([205.234.109.19]) by lo.gmane.org with esmtp
 (Exim 4.69) (envelope-from <mongrel-unicorn-bounces@rubyforge.org>) id
 1PH2BR-0006PS-LE for gclrug-mongrel-unicorn@m.gmane.org; Fri, 12 Nov 2010
 23:33:26 +0100
Received: from rubyforge.org (rubyforge.org [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id C0D0B1858381; Fri, 12 Nov 2010 17:33:22 -0500 (EST)
Received: from asmtpout029.mac.com (asmtpout029.mac.com [17.148.16.104]) by
 rubyforge.org (Postfix) with ESMTP id 65AA21858385 for
 <mongrel-unicorn@rubyforge.org>; Fri, 12 Nov 2010 16:52:16 -0500 (EST)
Received: from [10.172.3.15] ([64.236.128.62]) by asmtp029.mac.com (Sun
 Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 64bit)) with
 ESMTPSA id <0LBS007R1HX4K700@asmtp029.mac.com> for
 mongrel-unicorn@rubyforge.org; Fri, 12 Nov 2010 12:51:07 -0800 (PST)

Anyone come across this one before?

Refreshing Gem list
error reloading config_file=/data/servers/patch-fe-apache/conf/unicorn.rb: TypeError can't convert Hash into Integer /opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:89:in `read'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:89:in `load_specification'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:153:in `load_gems_in'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:152:in `each'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:152:in `load_gems_in'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:149:in `reverse_each'/opt/bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:149:in `load_gems_in'/opt/bcs/packages/ruby-
 gems-1.8/lib/site_ruby/1.8/rubygems/source_index.rb:345:in `refresh!'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/rails-2.3.4/lib/rails/vendor_gem_source_index.rb:34:in `refresh!'/opt
 /bcs/packages/ruby-gems-1.8/lib/site_ruby/1.8/rubygems.rb:746:in `refresh'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/unicorn-2.0.0/lib/unicorn/http_server.rb:673:in `build_app!'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/unicorn-2.0.0/lib/unicorn/http_server.rb:656:in `load_config!'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/unicorn-2.0.0/lib/unicorn/http_server.rb:330:in `join'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/unicorn-2.0.0/lib/unicorn.rb:13:in `run'/opt/bcs/packages/ruby-1.8.6/lib/ruby/gems/1.8/gems/unicorn-2.0.0/bin/unicorn_rails:208/opt/bcs/packages/ruby/bin/unicorn_rails:19:in `load'/opt/bcs/packages/ruby/bin/unicorn_rails:19


It appears our app isn't restarting when issuing a HUP, and I'm suspecting the above as the culprit. Unicorn restarts all workers without issue (other than the above error).


This is our basic config:

# Sample verbose configuration file for Unicorn (not Rack)
#
# This configuration file documents many features of Unicorn
# that may not be needed for some applications. See
# http://unicorn.bogomips.org/examples/unicorn.conf.minimal.rb
# for a much simpler configuration file.
#
# See http://unicorn.bogomips.org/Unicorn/Configurator.html for complete
# documentation.

# Use at least one worker per core if you're on a dedicated server,
# more will usually help for _short_ waits on databases/caches.
worker_processes 30

# Help ensure your application will always spawn in the symlinked
# "current" directory that Capistrano sets up.
working_directory "/data/servers/app/current"

# listen on both a Unix domain socket and a TCP port,
# we use a shorter backlog for quicker failover when busy
#listen "/data/servers/patch-fe-apache/logs/.unicorn_sock", :backlog => 64
listen 8080

# nuke workers after 30 seconds instead of 60 seconds (the default)
timeout 30

# feel free to point this anywhere accessible on the filesystem
pid "/data/servers/app/logs/unicorn.pid"

# By default, the Unicorn logger will write to stderr.
# Additionally, ome applications/frameworks log to stderr or stdout,
# so prevent them from going to /dev/null when daemonized here:
stderr_path "/data/servers/app/logs/unicorn_error.log"
stdout_path "/data/servers/app/logs/unicorn_out.log"

# combine REE with "preload_app true" for memory savings
# http://rubyenterpriseedition.com/faq.html#adapt_apps_for_cow
preload_app true
GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

before_fork do |server, worker|
  # the following is highly recomended for Rails + "preload_app true"
  # as there's no need for the master process to hold a connection
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!

  # The following is only recommended for memory/DB-constrained
  # installations.  It is not needed if your system can house
  # twice as many worker_processes as you have configured.
  #
  # # This allows a new master process to incrementally
  # # phase out the old master process with SIGTTOU to avoid a
  # # thundering herd (especially in the "preload_app false" case)
  # # when doing a transparent upgrade.  The last worker spawned
  # # will then kill off the old master process with a SIGQUIT.
  # old_pid = "#{server.config[:pid]}.oldbin"
  # if old_pid != server.pid
  #   begin
  #     sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
  #     Process.kill(sig, File.read(old_pid).to_i)
  #   rescue Errno::ENOENT, Errno::ESRCH
  #   end
  # end
  #
  # Throttle the master from forking too quickly by sleeping.  Due
  # to the implementation of standard Unix signal handlers, this
  # helps (but does not completely) prevent identical, repeated signals
  # from being lost when the receiving process is busy.
  # sleep 1
end

after_fork do |server, worker|
  # per-process listener ports for debugging/admin/migrations
  # addr = "127.0.0.1:#{9293 + worker.nr}"
  # server.listen(addr, :tries => -1, :delay => 5, :tcp_nopush => true)

  # the following is *required* for Rails + "preload_app true",
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection

  # if preload_app is true, then you may also want to check and
  # restart any other shared sockets/descriptors such as Memcached,
  # and Redis.  TokyoCabinet file handles are safe to reuse
  # between any number of forked children (assuming your kernel
  # correctly implements pread()/pwrite() system calls)
end


--
Grant Heffernan

_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying

