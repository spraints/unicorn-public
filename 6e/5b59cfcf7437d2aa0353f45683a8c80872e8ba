Return-Path: <mongrel-unicorn-bounces@rubyforge.org>
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS33070 50.56.128.0/17
X-Spam-Status: No, score=0.0 required=5.0 tests=FREEMAIL_FROM,T_DKIM_INVALID
 shortcircuit=no autolearn=unavailable version=3.3.2
X-Original-To: archivist@yhbt.net
Delivered-To: archivist@dcvr.yhbt.net
Received: from rubyforge.org (50-56-192-79.static.cloud-ips.com
 [50.56.192.79]) by dcvr.yhbt.net (Postfix) with ESMTP id 7898B3FD18 for
 <archivist@yhbt.net>; Mon,  4 Jun 2012 00:52:48 +0000 (UTC)
Received: from localhost.localdomain (localhost [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 634523AFF7; Mon,  4 Jun 2012 00:52:47 +0000 (UTC)
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
Received: from mail-bk0-f50.google.com (mail-bk0-f50.google.com
 [209.85.214.50]) by rubyforge.org (Postfix) with ESMTP id 03FC73AFF6 for
 <mongrel-unicorn@rubyforge.org>; Mon,  4 Jun 2012 00:52:42 +0000 (UTC)
Received: by bkcjg9 with SMTP id jg9so3747766bkc.23 for
 <mongrel-unicorn@rubyforge.org>; Sun, 03 Jun 2012 17:52:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com;
 s=20120113; h=mime-version:from:date:message-id:subject:to:content-type;
 bh=zrCILxUiHA3hWWK6cTJlRdJf+UtLWGr+96rnQylOPAw=;
 b=fHaGBBk4FxGTmNE1tC7Zd512irv2hnNAQfGail34gexAXRzUpikXrn4To+aUqVG0Hy
 RkQ8n41l47LPSmj4P5I1fWHU7jNYtXw87iHLXBhqVHe4GN9hmqepB+CvcFyraDmsR2rX
 f5Kytj5wAVZ2g1vCFloR8Tzarv0f+7LSQX7bhA1Gh1jNlYx3wi4wB/zaThbJXgJP+hqE
 hG0I97lU1toMoFn/c1rgMF29VMKsqPIEPnAOI7M9bAYFjqtejBfgrVQPcYQVZeQ0clDt
 VrOVwDJbETJTJ1bU+mxQn4UDsOxR/hZ2SMHhjBOy+YKYwXlmnNJEuUr+qt/+rbK6v6Om QlsA==
Received: by 10.204.128.88 with SMTP id j24mr5412897bks.89.1338771162156;
 Sun, 03 Jun 2012 17:52:42 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.204.226.208 with HTTP; Sun, 3 Jun 2012 17:52:21 -0700 (PDT)
From: Tony <bascule@gmail.com>
Date: Sun, 3 Jun 2012 17:52:21 -0700
Message-ID:
 <CAHOTMVJBydjzmEUVLnKtvW69E+CHXJQt4-LmnAn+Zs-RzTiK_g@mail.gmail.com>
Subject: Triggering OobGC when heap is nearly full
To: mongrel-unicorn@rubyforge.org
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org

We've started using OobGC at my workplace and it's definitely helping,
however the amount of garbage various requests in our app can generate
is quite the chunky stew.

It seems like OobGC configuration is all predicated around a number of
requests to process before OobGCing. However, REE exposes heap/GC
stats that could be used to make that decision intelligently at
runtime.

Is there any way presently to use some heuristics around the current
state of the heap to decide when to OobGC, or barring that, a way to
pass a proc I would write into OobGC that can answer the question
"should I OobGC?" with true/false rather than relying on a certain
number of requests?

--
Tony Arcieri
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying
