Return-Path: <mongrel-unicorn-bounces@rubyforge.org>
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS33070 50.56.128.0/17
X-Spam-Status: No, score=0.0 required=5.0 tests=FREEMAIL_FROM,T_DKIM_INVALID
 shortcircuit=no autolearn=unavailable version=3.3.2
X-Original-To: archivist@yhbt.net
Delivered-To: archivist@dcvr.yhbt.net
Received: from rubyforge.org (50-56-192-79.static.cloud-ips.com
 [50.56.192.79]) by dcvr.yhbt.net (Postfix) with ESMTP id D768F1F6FD for
 <archivist@yhbt.net>; Wed,  2 May 2012 16:33:39 +0000 (UTC)
Received: from localhost.localdomain (localhost [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 14A3B3B001; Wed,  2 May 2012 16:33:39 +0000 (UTC)
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
Received: from mail-qc0-f178.google.com (mail-qc0-f178.google.com
 [209.85.216.178]) by rubyforge.org (Postfix) with ESMTP id AA22C3AFFC for
 <mongrel-unicorn@rubyforge.org>; Wed,  2 May 2012 16:30:58 +0000 (UTC)
Received: by qcse1 with SMTP id e1so653120qcs.23 for
 <mongrel-unicorn@rubyforge.org>; Wed, 02 May 2012 09:30:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com;
 s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :content-type:content-transfer-encoding;
 bh=9u30HuseAKfs0d2YfrLFaMdQ9scD8S8K4Uo5WLnnrAA=;
 b=GZbsbo9NONXwen1Ee4hxBO2rx6VBeF2FJwl4L13tVzuJGkjTdZB0IhYi27UhvmVWVR
 reNuoKyoXLG/1iww/6W87k8AoclSnso89TZk6jUxxDsFgA4iJiBY86b5+kMERV8r2x/8
 Uk4hyq+DflWaG7sYbNXFNEwU7VVw0YSrcRSl+EQ6ZIKouzCXVOTI2OUuKKbbAH3w730A
 suntgH94rd4IXMCdnHQj+aOYJ0sUIAVYKNOIldgpDAmjEFveSabDRxROPMaGWeGLwvrD
 4EHl7ZtAFp04pOxLn061dT5EGinASQnoN9Sc1uFczGcyeJT982cXPwhZb81Q8D036kQa sDAQ==
MIME-Version: 1.0
Received: by 10.224.211.9 with SMTP id gm9mr25236082qab.78.1335976258200;
 Wed, 02 May 2012 09:30:58 -0700 (PDT)
Received: by 10.229.135.141 with HTTP; Wed, 2 May 2012 09:30:58 -0700 (PDT)
In-Reply-To: <20120429191825.GA14919@dcvr.yhbt.net>
References:
 <CALr1QpqWnCQnmy6ka50fH_c5nviW6f03pVbQ+qf0kqaiEBjYMA@mail.gmail.com>
 <20120428215904.GA6524@dcvr.yhbt.net>
 <CALr1QpqSYiR5xwbdRF5XDW0hw4zC4UK3wrCLXMXemkKZyM=a+Q@mail.gmail.com>
 <20120429191825.GA14919@dcvr.yhbt.net>
Date: Wed, 2 May 2012 09:30:58 -0700
Message-ID:
 <CALr1Qpq1M=LJz3g5n_LMe5Sx4t+TYwxtOgnD6HUzTmgPsv7LwQ@mail.gmail.com>
Subject: Re: Socket errors and nginx 502 gateway errors
From: Pico Aeterna <flippedootninja@gmail.com>
To: unicorn list <mongrel-unicorn@rubyforge.org>
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org

Eric,

Thanks for your help.  Was able to isolate the problem to a geoip gem.
 I appreciate the tips and debugging help.

Thanks
Will

On Sun, Apr 29, 2012 at 12:18 PM, Eric Wong <normalperson@yhbt.net> wrote:
> Pico Aeterna <flippedootninja@gmail.com> wrote:
>> reaped #<Process::Status: pid=3D9103,signaled(SIGIOT=3D6)> worker=3D9
>> /var/www/domain/releases/20120427011507/app/controllers/application_cont=
roller.rb:172:
>> [BUG] Segmentation fault
>
> OK, something (most likely your app) is causing Ruby to segfault.
> This is completely unrelated to nginx, so it'll be easier to hit
> unicorn directly to diagnose this.
>
> Since you're new to debugging, I'll try to walk you through dealing
> with core dumps:
>
> * Enable core dumps in the same shell process before starting unicorn
> =A0(ulimit -c unlimited && unicorn -c /path/to/config ...)
>
> * On Linux, /proc/sys/kernel/core_* sysctls control where your core dumps
> =A0are created.
>
> And when you get a core dump (a "core" or core.$PID file), you can run
> gdb on it:
>
> =A0 gdb /path/to/ruby /path/to/core
>
> Make sure you're using the same ruby binary that unicorn is using.
> Ruby should be compiled with debugging symbols ('-g' or '-ggdb') by
> default, but if not, you'll probably want to recompile.
>
>> 7369 =A0writev(31, [{"GET
>> /widget/looks.js?id=3D1172821&thumbs=3D3&source=3Dmy_looks&gender=3Dboth=
&align=3Dcenter&r=3D1320622693&hash=3D36189f21135680efbe2d076d0b56bb06
>> HTTP/1.0\r\nX-Forwarded
>> -For: 83.9.20.243, 83.9.20.243\r\nHost: domain.nu\r\nConnection:
>> close\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64)
>> AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.5
>> Safari/534.55.3\r\nAccept: */*\r\nReferer:
>> http://www.xxxxx.com/\r\nAccept-Language: pl-PL\r\nAccept-Encoding:
>> gzip, deflate\r\nCookie:
>> __utma=3D78941577.1641012066.1319789648.1325094074.1325949868.3;
>> __utmz=3D78941577.1325949868.3.3.utmcsr=3Dxxxx.com|utmccn=3D(referral)|u=
tmcmd=3Dreferral|utmcct=3D/l.php;
>> __gads=3DID=3D269c5cea8f09aea0:T=3D1319789648:S=3DALNI_MaqwdMaIFS5I3FeqL=
nv86oivdVDuA;
>> __qca=3DP0-1390452860-1319789648200\r\n\r\n", 745}], 1) =3D 7457369
>
>> Using the following I was able to get a 200 response
>>
>> req=3D'GET / HTTP/1.1\r\nHost: domain.com\r\n\r\n'
>> printf "$req" | socat - UNIX:/var/www/domain/shared/sockets/unicorn.sock
>
> OK, I think your printf request needs to more closely match what nginx
> is sending to trigger the segfault. =A0I would add/remove
> headers/parameters you see above until things start segfaulting.
>
> With socat, you may also want to wait a bit for the response for
> slower endpoints:
>
> =A0(printf "$req"; sleep $SECONDS) | socat - ...
>
> Otherwise socat will disconnect immediately after its written to
> the socket without waiting for a response.
>
> (a better, but complicated way would be to setup a FIFO as the
> =A0integration tests in unicorn do).
>
> If you're familiar with Rack::Mock*, you may also want to isolate this
> to just a Rack application. =A0It's likely the segfault can be triggered
> for your app without unicorn, too.
>
>> Sorry but i'm new to debugging Unicorn. =A0Hopefully some of this is hel=
pful.
>
> It is helpful. =A0Debugging unicorn isn't different than debugging
> anything else. =A0The most important is to understand the problem, and
> that's done by isolating variables to get a small, reproducible test
> case.
> _______________________________________________
> Unicorn mailing list - mongrel-unicorn@rubyforge.org
> http://rubyforge.org/mailman/listinfo/mongrel-unicorn
> Do not quote signatures (like this one) or top post when replying
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying
