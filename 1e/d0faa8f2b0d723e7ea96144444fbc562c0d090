X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS14383 205.234.109.0/24
X-Spam-Status: No, score=-0.7 required=5.0 tests=MSGID_FROM_MTA_HEADER,
 RP_MATCHES_RCVD shortcircuit=no autolearn=unavailable version=3.3.2
Path: news.gmane.org!not-for-mail
From: Augusto Becciu <augusto@jadedpixel.com>
Newsgroups: gmane.comp.lang.ruby.unicorn.general
Subject: Re: Read error: #<TypeError: can't modify frozen string> raised from
 HttpParser
Date: Mon, 7 Jun 2010 23:02:43 -0300
Message-ID: <AANLkTimuGgcwNAMcVZdViFWdF-UcW_RGyZAue7phUXps@mail.gmail.com>
References: <AANLkTim5Zd_NUWewbSLOy2cEZ1bsJSetq120DvmI79mK@mail.gmail.com> 
 <20100602202518.GA8617@dcvr.yhbt.net>
 <AANLkTikCjTCVorHoIwsOtfSzt1Z-Mv4ZE8nf0Mqtgnqq@mail.gmail.com> 
 <20100602213815.GA23255@dcvr.yhbt.net>
 <AANLkTimy0cLsh36A4pBoYMzZJY5wBKrxCp7rgCxyiZ53@mail.gmail.com> 
 <20100603234030.GA18377@dcvr.yhbt.net>
NNTP-Posting-Host: lo.gmane.org
Mime-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Trace: dough.gmane.org 1275963275 27738 80.91.229.12 (8 Jun 2010 02:14:35
 GMT)
X-Complaints-To: usenet@dough.gmane.org
NNTP-Posting-Date: Tue, 8 Jun 2010 02:14:35 +0000 (UTC)
Cc: unicorn list <mongrel-unicorn@rubyforge.org>
To: Eric Wong <normalperson@yhbt.net>
Original-X-From: mongrel-unicorn-bounces@rubyforge.org Tue Jun 08 04:14:33
 2010
Return-path: <mongrel-unicorn-bounces@rubyforge.org>
Envelope-to: gclrug-mongrel-unicorn@m.gmane.org
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
In-Reply-To: <20100603234030.GA18377@dcvr.yhbt.net>
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Original-Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org
Xref: news.gmane.org gmane.comp.lang.ruby.unicorn.general:542
Archived-At:
 <http://permalink.gmane.org/gmane.comp.lang.ruby.unicorn.general/542>
Received: from rubyforge.org ([205.234.109.19]) by lo.gmane.org with esmtp
 (Exim 4.69) (envelope-from <mongrel-unicorn-bounces@rubyforge.org>) id
 1OLoKn-0004ie-AG for gclrug-mongrel-unicorn@m.gmane.org; Tue, 08 Jun 2010
 04:14:33 +0200
Received: from rubyforge.org (rubyforge.org [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 547D4185836D; Mon,  7 Jun 2010 22:14:28 -0400 (EDT)
Received: from mail-pw0-f50.google.com (mail-pw0-f50.google.com
 [209.85.160.50]) by rubyforge.org (Postfix) with ESMTP id EA4D9185834B for
 <mongrel-unicorn@rubyforge.org>; Mon,  7 Jun 2010 22:03:04 -0400 (EDT)
Received: by pwi1 with SMTP id 1so110269pwi.23 for
 <mongrel-unicorn@rubyforge.org>; Mon, 07 Jun 2010 19:03:03 -0700 (PDT)
Received: by 10.115.100.15 with SMTP id c15mr12333734wam.11.1275962583340; 
 Mon, 07 Jun 2010 19:03:03 -0700 (PDT)
Received: by 10.114.195.17 with HTTP; Mon, 7 Jun 2010 19:02:43 -0700 (PDT)

On Thu, Jun 3, 2010 at 8:40 PM, Eric Wong <normalperson@yhbt.net> wrote:
> Augusto Becciu <augusto@jadedpixel.com> wrote:
>> On Wed, Jun 2, 2010 at 6:38 PM, Eric Wong <normalperson@yhbt.net> wrote:
>> > Augusto Becciu <augusto@jadedpixel.com> wrote:
>> >> On Wed, Jun 2, 2010 at 5:25 PM, Eric Wong <normalperson@yhbt.net> wro=
te:
>> >> > Augusto Becciu <augusto@jadedpixel.com> wrote:
>> >> >> Hey guys,
>> >> >>
>> >> >> Started running unicorn in a production server like two weeks ago.
>> >> >> It's been running smoothly, but looking at the logs found 44
>> >> >> exceptions like this:
>> >> >>
>> >> >> E, [2010-06-02T16:17:15.117071 #22680] ERROR -- : Read error:
>> >> >> #<TypeError: can't modify frozen string>
>> >> >> E, [2010-06-02T16:17:15.117270 #22680] ERROR -- :
>> >> >> /usr/lib/ruby/gems/1.8/gems/unicorn-0.99.0/lib/unicorn/http_reques=
t.rb:59:in
>> >> >> `headers'
>> >> >
>> >> > <snip>
>> >> >
>> >> >> Ruby version: ruby 1.8.7 (2009-12-24 patchlevel 248) [i686-linux],
>> >> >> MBARI 0x8770, Ruby Enterprise Edition 2010.01
>
> <snip>
>
>> >> There's no way our application could be freezing that constant, at
>> >> least not intentionally.
>
> <snip>
>
>> Thanks Eric! Unfortunately after completely disabling RPM, we keep
>> getting that error. :(
>>
>> What else could it be?
>
> Any details about your application you're allowed to share can help us,
> especially a list of library/gem dependencies and versions.
>
> I would grep through your gems and vendor directories to ensure there's
> nothing freezing objects it shouldn't freeze. =A0It could also be a buggy
> C extension corrupting memory somewhere, too...
>
> This isn't happening for all your worker processes, is it?
>
> If your application logs show which PID handled each request, you can
> join the PIDs from the application logs with PIDs in the error logs
> generated by Unicorn. =A0That lets you narrow down the possible requests
> that could trigger the errors and help you reproduce the problem sooner.
>
> This is one of my favorite features of one-request-per-process model
> is that you can easily narrow down which request is triggering a
> particular bug without worrying about race conditions from other
> requests.
>
> This is certainly the first time I've heard of this problem, so I think
> it's specific to something in your application/environment.
>
> --
> Eric Wong
>

Hi Eric,

Thanks for the ideas.

Ended up adding some debugging code to unicorn that lead me to the
culprit of the problem. It turned out being a bug in the HttpParser.

When Unicorn receives a request with a "Version" header, the
HttpParser transforms it into "HTTP_VERSION". After that tries to add
it to the request hash which already contains a "HTTP_VERSION" key
with the actual http version of the request. So it tries to append the
new value separated by a comma. But since the http version is a
freezed constant, the TypeError exception is raised.

According to the HTTP RFC
(http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.1) a
"Version" header is valid. However, it's not supported in rack, since
rack has a HTTP_VERSION env variable for the http version. So I think
the easiest way to deal with this problem is to just ignore the header
since it is extremely unusual. We were getting it from a crappy bot.

Below is a proposed patch.

Thanks a lot for your help!
Augusto


diff --git a/ext/unicorn_http/unicorn_http.rl b/ext/unicorn_http/unicorn_ht=
tp.rl
index 264db68..aa23024 100644
--- a/ext/unicorn_http/unicorn_http.rl
+++ b/ext/unicorn_http/unicorn_http.rl
@@ -197,6 +197,15 @@ static void write_value(VALUE req, struct http_parser =
*hp,
     assert_frozen(f);
   }

+  /*
+   * ignore "Version" headers since they conflict with the HTTP_VERSION
+   * rack env variable.
+   */
+  if (rb_str_cmp(f, g_http_version) =3D=3D 0) {
+    hp->cont =3D Qnil;
+    return;
+  }
+
   e =3D rb_hash_aref(req, f);
   if (NIL_P(e)) {
     hp->cont =3D rb_hash_aset(req, f, v);
diff --git a/test/unit/test_http_parser_ng.rb b/test/unit/test_http_parser_=
ng.rb
index a067ac8..cb30f32 100644
--- a/test/unit/test_http_parser_ng.rb
+++ b/test/unit/test_http_parser_ng.rb
@@ -440,4 +440,24 @@ class HttpParserNgTest < Test::Unit::TestCase
     end
   end

+  def test_ignore_version_header
+    http =3D "GET / HTTP/1.1\r\nVersion: hello\r\n\r\n"
+    req =3D {}
+    assert_equal req, @parser.headers(req, http)
+    assert_equal '', http
+    expect =3D {
+      "SERVER_NAME" =3D> "localhost",
+      "rack.url_scheme" =3D> "http",
+      "REQUEST_PATH" =3D> "/",
+      "SERVER_PROTOCOL" =3D> "HTTP/1.1",
+      "PATH_INFO" =3D> "/",
+      "HTTP_VERSION" =3D> "HTTP/1.1",
+      "REQUEST_URI" =3D> "/",
+      "SERVER_PORT" =3D> "80",
+      "REQUEST_METHOD" =3D> "GET",
+      "QUERY_STRING" =3D> ""
+    }
+    assert_equal expect, req
+  end
+
 end
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying

