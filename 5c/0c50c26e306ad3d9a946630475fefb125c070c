Return-Path: <mongrel-unicorn-bounces@rubyforge.org>
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS33070 50.56.128.0/17
X-Spam-Status: No, score=-0.2 required=5.0 tests=AWL shortcircuit=no
 autolearn=unavailable version=3.3.2
X-Original-To: archivist@yhbt.net
Delivered-To: archivist@dcvr.yhbt.net
Received: from rubyforge.org (50-56-192-79.static.cloud-ips.com
 [50.56.192.79]) by dcvr.yhbt.net (Postfix) with ESMTP id BFAFF1F5BD for
 <archivist@yhbt.net>; Thu,  4 Apr 2013 18:09:30 +0000 (UTC)
Received: from localhost.localdomain (localhost [127.0.0.1]) by rubyforge.org
 (Postfix) with ESMTP id 77E332E0F2; Thu,  4 Apr 2013 18:09:31 +0000 (UTC)
X-Original-To: mongrel-unicorn@rubyforge.org
Delivered-To: mongrel-unicorn@rubyforge.org
Received: from dcvr.yhbt.net (dcvr.yhbt.net [64.71.152.64]) by rubyforge.org
 (Postfix) with ESMTP id E709F2E0C0 for <mongrel-unicorn@rubyforge.org>; Thu, 
 4 Apr 2013 18:09:23 +0000 (UTC)
Received: from localhost (dcvr.yhbt.net [127.0.0.1]) by dcvr.yhbt.net
 (Postfix) with ESMTP id E8D3D1F5B8; Thu,  4 Apr 2013 18:09:21 +0000 (UTC)
Date: Thu, 4 Apr 2013 18:09:21 +0000
From: Eric Wong <normalperson@yhbt.net>
To: unicorn list <mongrel-unicorn@rubyforge.org>
Subject: Re: Can Unicorn Listen to an Existing Socket Descriptor?
Message-ID: <20130404180921.GA15263@dcvr.yhbt.net>
References:
 <CABL1OSrsHGJcizRUEtefnYrj0sxsqu5iHNEVAGP8kDG+hRPy2A@mail.gmail.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To:
 <CABL1OSrsHGJcizRUEtefnYrj0sxsqu5iHNEVAGP8kDG+hRPy2A@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Cc: Jacob <groundwater@gmail.com>
X-BeenThere: mongrel-unicorn@rubyforge.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <unicorn-public@bogomips.org>
List-Unsubscribe: <http://rubyforge.org/mailman/options/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=unsubscribe>
List-Archive: <http://rubyforge.org/pipermail/mongrel-unicorn>
List-Post: <unicorn-public@bogomips.org>
List-Help: <mailto:mongrel-unicorn-request@rubyforge.org?subject=help>
List-Subscribe: <http://rubyforge.org/mailman/listinfo/mongrel-unicorn>,
 <mailto:mongrel-unicorn-request@rubyforge.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: mongrel-unicorn-bounces@rubyforge.org
Errors-To: mongrel-unicorn-bounces@rubyforge.org

Jacob <groundwater@gmail.com> wrote:
> I know that Unicorn opens and shares it's bound socket amongst its
> sub-processes, however I was hoping I could also pre-open a socket to
> be handed off to Unicorn.

Yes, but unicorn has this feature to support in-place upgrades
(SIGUSR2).  You still need to tell unicorn about the socket via config
file or command-line, otherwise it'll close sockets it does not know
about (to support changing addresses/ports during USR2 upgrades).

You need to set the UNICORN_FD environment variable in the parent

Something like this (untested):

  require "socket"

  # bind the socket in the parent
  s = TCPServer.new("0.0.0.0", 1234)

  # this may be comma-delimited list of FD numbers:
  ENV["UNICORN_FD"] = s.fileno.to_s

  # sharing non-standard FDs over exec() must be explicit in Ruby 2.0:
  s.close_on_exec = false
  redirects = { s => s }

  # unicorn must know about the bound address of the FDs its inheriting
  exec("unicorn", "-l", "0.0.0.0:1234", redirects)
_______________________________________________
Unicorn mailing list - mongrel-unicorn@rubyforge.org
http://rubyforge.org/mailman/listinfo/mongrel-unicorn
Do not quote signatures (like this one) or top post when replying
